/**
 * Appwide Shadow DOM styling -> Theme
 *
 * Shadow DOM support is not integrated into libsass -> https://github.com/sass/libsass/issues/452
 * As for now we use Ruby SASS -> https://sass-compatibility.github.io/#shadow_dom_styling
 */

$color01: #801e11;
$color02: #bb4d59;
$color03: #fafafa;
$color04: #333333;
$color05: rgb(237, 237, 237);
$color06: #ffffff;
$color07: #c83e2c;
$color08: #ad3226;
$color09: rgba(181, 27, 13, 0.5);
$color10: #ff998c;
$color11: #bb9371;
$color12: #b51b0d;
$color13: rgba(35, 47, 35, 0.28);
$color14: #00ff84;

body {
  background: $color03;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: $color04;
}

ivx-app::shadow {
  // left drawer (navigation panel)
  core-header-panel[drawer] {
    background-color: $color05;

    & /deep/ paper-item {
      background-color: $color06;

      &.core-selected {
        color: $color03;
        background-color: $color09;
      }

      &::shadow paper-ripple {
        color: $color07;
      }
    }
  }

  core-header-panel[main] {
    core-toolbar {
      background-color: $color09;
      color: $color06;
    }
  }
}

html /deep/ {
  .float-left {
    float: left;
  }

  .float-right {
    float: right;
  }

  .clear {
    clear: both;
  }

  page paper-input {
    width: 100%;

    &::shadow paper-input-decorator::shadow {
      &.input-body {
        font-size: 2rem;
      }
    }
  }

  paper-input-decorator::shadow {
    .focused-underline {
      background-color: $color08;
    }
  }

  paper-button {
    font-size: 1rem;
    text-transform: none;

    .highlight {
      background-color: $color08;
      color: $color03;
    }

    .highlight::shadow #ripple {
      color: $color10;
    }
  }

  paper-radio-button::shadow {
    #ink[checked] {
      color: $color08;
    }

    #onRadio {
      background-color: $color08;
    }

    #offRadio {
      border-color: $color08;
    }
  }

  paper-checkbox::shadow {
    #ink[checked] {
      color: $color08;
    }

    #checkbox.checked {
      border-color: $color08;
      background-color: $color08 + 100;
    }
  }

  /* the item selector will match the given element in the `ivx-qtype-rank` element
     but will also match the item in the avatar (this is when the item is dragged
     around). So we need only one style to get the same appearance.
   */
  item {
    display: block;
    text-align: center;
    margin-bottom: 0.5rem;
    padding: 1rem;
    background-color: $color09;
    color: white;
    border: 1px $color09 solid;
  }

  paper-slider.noprogress::shadow,
  paper-slider::shadow {
    #sliderKnobInner {
      background-color: $color12 !important;
      border: none !important;
    }
  }

  paper-slider.noprogress /deep/ {
    #activeProgress {
      display: none;
      visibility: hidden;
    }
  }

  paper-slider /deep/ {
    #activeProgress {
      background-color: $color12 !important;
    }
  }

  ivx-pager::shadow {
    paper-progress::shadow #activeProgress {
      background-color: $color12;
    }

    core-icon {
      color: grey;
    }
  }

  paper-toast {
    bottom: 0;
    left: 25%;
    width: 50%;
    background-color: $color01;
  }

  core-icon {
    color: #828282;
  }

  paper-fab /deep/ core-icon {
    color: white;
  }

  #paperFabWrapper paper-fab {
    &:nth-child(2) {
      background-color: $color08 + 100;
    }

    &:last-child {
      background-color: $color08;
    }

    &.highlight {
      background-color: $color04;
    }
  }

  .sectionWrapper {
    .headline {
      color: $color02;
    }

    .divider {
      background-color: $color02;
    }
  }

  #brandLogo {
    filter: saturate(105%) hue-rotate(-199deg) brightness(96%);
  }

  ivx-qtype-selection-matrix[mode=single-answer]::shadow {
    .rowHead,
    .colHead,
    .cell {
      border-bottom: 1px $color12 solid !important;
    }
  }
/*
  ivx-qtype-rank::shadow {
    item {
      background-color: $color08;
      border: $color08;
    }

    item.dragging {
      border: 1px red solid;
      background-color: yellow;
    }

    item.dropped-source {
      // animations with keyframes don't work by now as of https://code.google.com/p/chromium/issues/detail?id=382498
      // we could use <core-animation> but this needs some more business logic when using themes:
      // view-source:https://www.polymer-project.org/components/core-animation/demo.html

      // but this works:
      background-color: pink;
    }

    item.dropped-target {
      background-color: yellow;
    }
  }*/
}

/* This is the avatar container to use when this pull-request will not be accepted:
   https://github.com/Polymer/core-drag-drop/pull/12 */
/*core-drag-avatar item {
  border: 1px grey dotted;
  opacity: 0.8;
}*/
